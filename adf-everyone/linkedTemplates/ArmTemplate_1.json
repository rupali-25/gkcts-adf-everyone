{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-everyone"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_kiran_sink_4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_group3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Group3/Kiran_group3_outputs",
						"fileSystem": "requirements"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_kiran_sink_5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_group3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Group3/Kiran_group3_outputs",
						"fileSystem": "requirements"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "product_name",
						"type": "String"
					},
					{
						"name": "category",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_products_source_aditya')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_group3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Aditya_Kumar"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.csv",
						"fileSystem": "requirements"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "product_name",
						"type": "String"
					},
					{
						"name": "category",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "store_location",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfcdc1')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "dbo.my_table",
								"properties": {
									"schema": [
										{
											"name": "id",
											"dataType": "integer"
										},
										{
											"name": "name",
											"dataType": "string"
										},
										{
											"name": "insertime",
											"dataType": "timestamp"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "my_table"
										},
										{
											"name": "enableNativeCdc",
											"value": true
										},
										{
											"name": "netChanges",
											"value": true
										},
										{
											"name": "allowSchemaDrift",
											"value": false
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": false
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "sqlserver"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "skipInitialLoad",
									"value": true
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "dbo.my_table2",
								"properties": {
									"schema": [
										{
											"name": "id",
											"dataType": "integer"
										},
										{
											"name": "name",
											"dataType": "string"
										},
										{
											"name": "insertime",
											"dataType": "timestamp"
										}
									],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "my_table2"
										},
										{
											"name": "allowSchemaDrift",
											"value": false
										},
										{
											"name": "inferDriftedColumnTypes",
											"value": false
										},
										{
											"name": "keys",
											"value": [
												"id"
											]
										},
										{
											"name": "deletable",
											"value": true
										},
										{
											"name": "updateable",
											"value": true
										},
										{
											"name": "upsertable",
											"value": true
										},
										{
											"name": "defaultToUpsert",
											"value": true
										}
									]
								}
							}
						],
						"Connection": {
							"linkedService": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "sqlserver"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "deletable",
									"value": false
								},
								{
									"name": "insertable",
									"value": true
								},
								{
									"name": "updateable",
									"value": false
								},
								{
									"name": "upsertable",
									"value": false
								},
								{
									"name": "skipDuplicateMapInputs",
									"value": true
								},
								{
									"name": "skipDuplicateMapOutputs",
									"value": true
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "dbo.my_table2",
								"sourceEntityName": "dbo.my_table",
								"sourceConnectionReference": {
									"connectionName": "AzureSqlDatabase1",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": [
										{
											"name": "id",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "id",
												"entity": "dbo.my_table",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase1",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "insertime",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "insertime",
												"entity": "dbo.my_table",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase1",
													"type": "linkedservicetype"
												}
											}
										},
										{
											"name": "name",
											"type": "Direct",
											"functionName": "",
											"attributeReference": {
												"name": "name",
												"entity": "dbo.my_table",
												"entityConnectionReference": {
													"connectionName": "AzureSqlDatabase1",
													"type": "linkedservicetype"
												}
											}
										}
									]
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1
					},
					"mode": "Microbatch"
				},
				"allowVNetOverride": false
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_aggregate_kiran')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Kiran_group3_tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_kiran_4",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_kiran_sink_5",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "aggregate"
						},
						{
							"name": "derivedColumn"
						},
						{
							"name": "filter"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source",
						"filter aggregate(groupBy(category),",
						"     total_quantity = sum(toInteger(quantity))) ~> aggregate",
						"source derive(productname = replace(product_name,'\"','')) ~> derivedColumn",
						"derivedColumn filter(!isNull(product_id) &&\r",
						"!isNull(product_name) &&\r",
						"!isNull(category) &&\r",
						"!isNull(price) &&\r",
						"!isNull(quantity) &&\r",
						"!isNull(store_location)) ~> filter",
						"aggregate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          product_name as string,",
						"          category as string,",
						"          price as string",
						"     ),",
						"     partitionFileNames:['aggregate_output.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_kiran_sink_5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_filter_aditya')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Aditya_Kumar_Tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_products_source_aditya",
								"type": "DatasetReference"
							},
							"name": "ProductsDfInput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_filter_sink_aditya",
								"type": "DatasetReference"
							},
							"name": "Adityafilteroutput"
						}
					],
					"transformations": [
						{
							"name": "filterTransformation"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProductsDfInput",
						"ProductsDfInput filter(toInteger(price) > 100&& ",
						"category == 'Smartphone' &&",
						"toInteger(quantity) > 0) ~> filterTransformation",
						"filterTransformation sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Adityafilteroutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_products_source_aditya')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_select_kiran')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Kiran_group3_tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_kiran_4",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_kiran_sink_4",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "select"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source",
						"filter1 select(mapColumn(",
						"          product_name = Productname,",
						"          category,",
						"          price",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select",
						"source derive(Productname = replace(product_name,'\"','')) ~> derivedColumn1",
						"derivedColumn1 filter(!isNull(product_id) &&",
						"!isNull(product_name) &&",
						"!isNull(category) &&",
						"!isNull(price) &&",
						"!isNull(quantity) &&",
						"",
						"!isNull(store_location)) ~> filter1",
						"select sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['select_output.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_kiran_sink_4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_sort_aditya')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Aditya_Kumar_Tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_products_source_aditya",
								"type": "DatasetReference"
							},
							"name": "ProductsInput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_filter_sink_aditya",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "SortByPrice"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProductsInput",
						"ProductsInput sort(desc(toInteger(price), false)) ~> SortByPrice",
						"SortByPrice sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> output"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_products_source_aditya')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_sujay_3_union')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Sujay_Group3_Tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Sujay_Products_Source",
								"type": "DatasetReference"
							},
							"name": "Products1"
						},
						{
							"dataset": {
								"referenceName": "DS_Sujay_Products2_Source",
								"type": "DatasetReference"
							},
							"name": "Products2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Sujay_ProductsUnion_Sink",
								"type": "DatasetReference"
							},
							"name": "ProductsUnionSink"
						}
					],
					"transformations": [
						{
							"name": "UnionProd1and2"
						},
						{
							"name": "removequote"
						},
						{
							"name": "removequote2"
						},
						{
							"name": "DropNulls1"
						},
						{
							"name": "DropNulls2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Products1",
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Products2",
						"removequote, removequote2 union(byName: true)~> UnionProd1and2",
						"DropNulls1 derive(product_name = replace(product_name,'\"','')) ~> removequote",
						"DropNulls2 derive(product_name = replace(product_name, '\"', '')) ~> removequote2",
						"Products1 filter(!isNull(product_id) &&\r",
						"!isNull(product_name) &&\r",
						"!isNull(category) &&\r",
						"!isNull(price) &&\r",
						"!isNull(quantity) &&\r",
						"!isNull(store_location)) ~> DropNulls1",
						"Products2 filter(!isNull(product_id) &&",
						"!isNull(product_name) &&",
						"!isNull(category) &&",
						"!isNull(price) &&",
						"!isNull(quantity) &&",
						"!isNull(store_location)) ~> DropNulls2",
						"UnionProd1and2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Group3_Sujay_Union.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ProductsUnionSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_sujay_7_sort_byprice')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Sujay_Group3_Tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Sujay_Products_Source",
								"type": "DatasetReference"
							},
							"name": "Products"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ProductsSortedByPriceDesc_Sink",
								"type": "DatasetReference"
							},
							"name": "ProductsSortedByPrice"
						}
					],
					"transformations": [
						{
							"name": "SortByPrice"
						},
						{
							"name": "DropNulls"
						},
						{
							"name": "RemoveQuote"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Products",
						"DropNulls sort(desc(toInteger(price), true),",
						"     caseInsensitive: true,",
						"     partitionLevel: true) ~> SortByPrice",
						"RemoveQuote filter(!isNull(product_id) &&\r",
						"!isNull(product_name) &&\r",
						"!isNull(category) &&\r",
						"!isNull(price) &&\r",
						"!isNull(quantity) &&\r",
						"!isNull(store_location)) ~> DropNulls",
						"Products derive(product_name = replace(product_name,'\"','')) ~> RemoveQuote",
						"SortByPrice sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Group3_Sujay_SortByPrice.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ProductsSortedByPrice"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_sujay_7_sort_byquantity')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Sujay_Group3_Tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Sujay_Products_Source",
								"type": "DatasetReference"
							},
							"name": "Products"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ProductsSortedByQuantityDesc_Sink",
								"type": "DatasetReference"
							},
							"name": "ProductsSortedByPrice"
						}
					],
					"transformations": [
						{
							"name": "SortByQuantity"
						},
						{
							"name": "DropNulls"
						},
						{
							"name": "RemoveQuote"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Products",
						"RemoveQuote sort(desc(toInteger(quantity), true),",
						"     caseInsensitive: true,",
						"     partitionLevel: true) ~> SortByQuantity",
						"Products filter(!isNull(product_id) &&",
						"!isNull(product_name) &&",
						"!isNull(category) &&",
						"!isNull(price) &&",
						"!isNull(quantity) &&",
						"!isNull(store_location)) ~> DropNulls",
						"DropNulls derive(product_name = replace(product_name,'\"','')) ~> RemoveQuote",
						"SortByQuantity sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Group3_Sujay_SortByQuantity.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ProductsSortedByPrice"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_sujay_derivedcol_totalvalue')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Sujay_Group3_Tasks"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Sujay_Products_Source",
								"type": "DatasetReference"
							},
							"name": "ProductsSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Sujay_DerivedColumn",
								"type": "DatasetReference"
							},
							"name": "DerivedColumnSink"
						}
					],
					"transformations": [
						{
							"name": "totalvalue"
						},
						{
							"name": "removequotes"
						},
						{
							"name": "DropNulls"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          product_name as string,",
						"          category as string,",
						"          price as string,",
						"          quantity as string,",
						"          store_location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProductsSource",
						"removequotes derive(total_value = round(toDouble(price)*toInteger(quantity),2)) ~> totalvalue",
						"DropNulls derive(product_name = replace(product_name, '\"', '')) ~> removequotes",
						"ProductsSource filter(!isNull(product_id) &&",
						"!isNull(product_name) &&",
						"!isNull(category) &&",
						"!isNull(price) &&",
						"!isNull(quantity) &&",
						"!isNull(store_location)) ~> DropNulls",
						"totalvalue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Group3_Sujay_TotalValue.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> DerivedColumnSink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Sujay_Group3_DerivedColumn_TotalValue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TotalValueColumn",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_sujay_derivedcol_totalvalue",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductsSource": {},
									"DerivedColumnSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PL_Sujay_Group3"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_sujay_derivedcol_totalvalue')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Sujay_Group3_SortByPrice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SortByPrice",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_sujay_7_sort_byprice",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Products": {},
									"ProductsSortedByPrice": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PL_Sujay_Group3"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_sujay_7_sort_byprice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Sujay_Group3_SortByQuantity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SortByQuantity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_sujay_7_sort_byquantity",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Products": {},
									"ProductsSortedByPrice": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PL_Sujay_Group3"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_sujay_7_sort_byquantity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Sujay_Group3_Union')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UnionTransformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_sujay_3_union",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Products1": {},
									"Products2": {},
									"ProductsUnionSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "PL_Sujay_Group3"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_sujay_3_union')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_aggregate_transformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_aggregate_kiran",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_aggregate_kiran",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source": {},
									"sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_aggregate_kiran')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_filter_transformation_aditya')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_filter_aditya",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_filter_aditya",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductsDfInput": {},
									"Adityafilteroutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_filter_aditya')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_select_transformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_select_kiran",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_select_kiran",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source": {},
									"sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_select_kiran')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_sort_transformation_aditya')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_sort_aditya",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_sort_aditya",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductsInput": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Aditya_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-16T11:37:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_sort_aditya')]"
			]
		}
	]
}